# This file defines the reusable action: kaihendry/actions/goredo/action.yml
name: "Install Goredo"
description: "Downloads, builds, installs the goredo build tool using Go, and verifies it."

# Define inputs for customization (optional, but good practice)
inputs:
  go-version:
    description: "Version of Go to set up for building goredo"
    required: false
    default: "1.21" # Default Go version
  goredo-version:
    description: "Version of goredo to download and install"
    required: false
    default: "2.6.4" # Default goredo version

runs:
  # Use 'composite' to run steps directly on the runner host
  using: "composite"
  steps:
    # Although the calling workflow might set up Go, it's robust
    # for the action to ensure its required Go version is present.
    - name: Set up Go ${{ inputs.go-version }}
      uses: actions/setup-go@v5
      with:
        go-version: ${{ inputs.go-version }}

    # Composite actions should ensure their own dependencies are met.
    - name: Install zstd dependency
      shell: bash # Use bash explicitly for shell commands
      run: |
        echo "Installing zstd dependency..."
        sudo apt-get update -qq
        sudo apt-get install -y --no-install-recommends zstd

    # Use inputs for version flexibility
    - name: Download goredo v${{ inputs.goredo-version }} source
      shell: bash
      run: |
        echo "Downloading goredo..."
        curl -L -O "http://www.goredo.cypherpunks.su/download/goredo-${{ inputs.goredo-version }}.tar.zst"

    - name: Extract goredo source
      shell: bash
      run: |
        echo "Extracting goredo..."
        mkdir -p ${{ runner.temp }}/goredo-src
        tar --use-compress-program unzstd -xvf "goredo-${{ inputs.goredo-version }}.tar.zst" --strip-components=1 -C ${{ runner.temp }}/goredo-src

    - name: Build goredo
      shell: bash
      run: |
        echo "Building goredo..."
        go build -mod=vendor
      working-directory: ${{ runner.temp }}/goredo-src/src

    - name: Install goredo (symlinks)
      shell: bash
      run: |
        INSTALL_DIR="${{ runner.temp }}/goredo-bin"
        mkdir -p "$INSTALL_DIR"
        echo "Installing goredo symlinks to $INSTALL_DIR..."
        ./goredo -symlinks "$INSTALL_DIR"
        echo "Adding $INSTALL_DIR to PATH..."
        echo "$INSTALL_DIR" >> $GITHUB_PATH
        echo "Contents of INSTALL_DIR:"
        ls -l "$INSTALL_DIR"
        echo "Current PATH:"
        echo $PATH
      working-directory: ${{ runner.temp }}/goredo-src/src

    - name: Verify PATH and redo command
      shell: bash
      run: |
        echo "Checking PATH after installation..."
        echo $PATH
        echo "Checking for redo command..."
        which redo || { echo "::error::'redo' command not found in PATH."; exit 1; }
