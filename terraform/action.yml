---
name: "Deploy Terraform Infrastructure"

inputs:
  config-file:
    description: "Path to the config.yaml file"
    required: true
    default: "config.yaml"
  tf-api-token:
    description: "Terraform Cloud API token"
    required: true
  tf-cloud-organization:
    description: "Terraform Cloud organization name"
    required: false
    default: "kaihendry"
  environment:
    description: "Environment name (dev, staging, prod)"
    required: false
    default: "dev"
  region:
    description: "AWS region"
    required: false
    default: "eu-west-2"

runs:
  using: "composite"
  steps:
      # TODO: Role lookup based on environment
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v5
      with:
        role-to-assume: arn:aws:iam::407461997746:role/github-actions-Role-56IHHM969DKJ
        aws-region: ${{ inputs.region }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        cli_config_credentials_token: ${{ inputs.tf-api-token }}

    - name: Generate Terraform configuration
      shell: bash
      run: |
        echo "=== Generating main.tf.json from config.yaml ==="
        python3 << 'PYTHON_EOF'
        import yaml
        import json

        # Load config.yaml
        with open('config.yaml', 'r') as f:
            config = yaml.safe_load(f)

        # Get terraform config from YAML and add terraform cloud and provider configuration
        tf_config = config.get('terraform', {}).copy()
        tf_config.update({
            "terraform": {
                "required_providers": {
                    "aws": {
                        "source": "hashicorp/aws",
                        "version": "~> 5.0"
                    }
                },
                "cloud": {
                    "organization": "${{ inputs.tf-cloud-organization }}",
                    "workspaces": {
                        "name": "${{ github.event.repository.name }}-${{ inputs.environment }}"
                    }
                }
            },
            "provider": {
                "aws": {
                    "region": "${{ inputs.region }}",
                    "default_tags": {
                        "tags": {
                            "Environment": "${{ inputs.environment }}",
                            "Repository": "${{ github.event.repository.name }}",
                            "ManagedBy": "Terraform",
                            "Owner": "${{ github.actor }}",
                            "Workspace": "${{ github.event.repository.name }}-${{ inputs.environment }}"
                        }
                    }
                }
            }
        })

        # Write the JSON config
        with open('main.tf.json', 'w') as f:
            json.dump(tf_config, f, indent=2)

        print("Generated main.tf.json successfully")
        PYTHON_EOF

    - name: Terraform Init
      shell: bash
      run: terraform init

    - name: Plan
      shell: bash
      run: |
        cat main.tf.json
        ls -la
        terraform apply -auto-approve -no-color
